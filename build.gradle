plugins {
    id "com.github.node-gradle.node" version "7.0.0"
}


abstract class GreetingTask extends DefaultTask {
    @Input
    abstract Property<String> getGreeting()

    GreetingTask() {
        greeting.convention('hello from GreetingTask')
    }

    @TaskAction
    def greet() {
        println greeting.get()
    }
}


task docsGeneration(type:Exec) {
    workingDir "${project.projectDir}"
    commandLine 'cmd', '/c', 'jsdoc -r dist'
    doLast {
        println "Doc Generated using JS files"
    }
}

task build(type:Exec) {
    workingDir "${project.projectDir}"
    commandLine 'cmd', '/c', 'gradle npm_run_build'
    doLast  {
        println "Project Built"
    }
}


task printProjectDir {
    doLast{
        println "${project.projectDir}"
    }
}

// Use the default greeting
tasks.register('hello', GreetingTask)

// Customize the greeting
tasks.register('greeting',GreetingTask) {
    greeting = 'greetings from GreetingTask'
}

task runUnitTests(type: Exec) {
    workingDir "${project.projectDir}"
    commandLine 'cmd', '/c', 'jest','--testPathIgnorePatterns=api'
    doLast  {
        println "Unit Tests"
    }
}




task deleteDb(type:Exec){
    workingDir "${project.projectDir}"
    commandLine 'cmd', '/c', 'cross-env','NODE_ENV=development', 'node', 'scripts/db/delete'
}

task createDb(type:Exec){
    workingDir "${project.projectDir}"
    commandLine 'cmd', '/c', 'cross-env', 'NODE_ENV=development' ,'node' ,'scripts/db/create'
}

task migrateDb(type: Exec){
    workingDir "${project.projectDir}"
    commandLine 'cmd', '/c', 'npm', 'run', 'migrate:dev'
}


task startDocker(type:Exec){
    workingDir "${project.projectDir}"
    commandLine 'cmd', '/c', 'docker-compose up'
}

task runAPITests(type: Exec) {
    workingDir "${project.projectDir}"
    commandLine 'cmd', '/c', 'jest', '--coverage', '--coverageReporters=\"html\"', '--runInBand', '--testPathPattern=api'
    dependsOn 'deleteDb'
    dependsOn 'createDb'
    dependsOn 'migrateDb'
    tasks.findByName('createDb').mustRunAfter 'deleteDb'
    tasks.findByName('migrateDb').mustRunAfter 'createDb'
}

